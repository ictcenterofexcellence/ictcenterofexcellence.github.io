import{_ as t,c as i,o as r,j as e,a1 as o,a as n}from"./chunks/framework.B9UoG-Kh.js";const m=JSON.parse('{"title":"Optimize R&D with a Digital Twin","description":"","frontmatter":{},"headers":[],"relativePath":"docs/digital-twin.md","filePath":"docs/digital-twin.md"}'),s={name:"docs/digital-twin.md"};function l(d,a,h,c,w,p){return r(),i("div",null,a[0]||(a[0]=[e("h1",{id:"optimize-r-d-with-a-digital-twin",tabindex:"-1"},[n("Optimize R&D with a Digital Twin "),e("a",{class:"header-anchor",href:"#optimize-r-d-with-a-digital-twin","aria-label":'Permalink to "Optimize R&D with a Digital Twin"'},"​")],-1),e("iframe",{width:"688",height:"400",src:"https://www.youtube.com/embed/k_ktW3_2KQ8?vq=hd720",title:"ICT Group - centre of excellence   digital twin technology (EN)",frameborder:"0",allow:"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:""},null,-1),o('<h2 id="what-is-a-digital-twin" tabindex="-1">What is a digital twin? <a class="header-anchor" href="#what-is-a-digital-twin" aria-label="Permalink to &quot;What is a digital twin?&quot;">​</a></h2><p>A digital twin is a fully digital version of your system. They can come in many different variations, the important part is to create a twin that suits the needs of your development process.</p><h2 id="what-are-the-benefits" tabindex="-1">What are the benefits? <a class="header-anchor" href="#what-are-the-benefits" aria-label="Permalink to &quot;What are the benefits?&quot;">​</a></h2><ul><li><p><strong>Quick iteration on system design</strong>: Iterate on a system design without needing real hardware and parts. This can save costs while design and iterating a system, and can help find design flaws in systems early on, before any physical hardware is made.</p></li><li><p><strong>Paralellize hardware &amp; software development</strong>: With the correct setup, a digital twin can also serve as a testing ground for software. This means software can be developed in parallel with the hardware, saving on delivery time, and possibly helping to find issues earlier in the process.</p></li><li><p><strong>Reduce hardware dependency</strong>: Hardware is often costly and slow to produce, and would rather be sold to customers. Using a digital version of the system, fewer hardware is needed in R&amp;D, and more people can work on the same (virtual) system at the same time.</p></li><li><p><strong>Safety</strong>: Digital hardware cannot get damaged or hurt anyone. This makes it ideal for R&amp;D, where full operating software is often not yet finalized.</p></li></ul><h2 id="what-have-we-done" tabindex="-1">What have we done? <a class="header-anchor" href="#what-have-we-done" aria-label="Permalink to &quot;What have we done?&quot;">​</a></h2><p>We have created a full digital version of our demo factory (see video above). It offers the same OPC-UA interface as our real hardware, and can be controlled using the same control software. Using this setup, we were able to develop the control software for the factory remotely, with multiple people working with the factory at the same time. We have integrated it into our CI/CD pipelines and are able to run integration tests on a virtual version of our system, for every software release.</p>',6)]))}const g=t(s,[["render",l]]);export{m as __pageData,g as default};
